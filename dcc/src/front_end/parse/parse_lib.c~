//===========================================================================
// parse_lib.c
//   Copyright (C) 2013 Free Software Foundation, Inc.
//   Originally by ZhaoFeng Liang <zhf.liang@outlook.com>
//
//This file is part of DTAHS_DCC.
//
//DTAHS_DCC is free software; you can redistribute it and/or modify
//it under the terms of the GNU General Public License as published by
//the Free Software Foundation; either version 2 of the License, or 
//(at your option) any later version.
//
//DTAHS_DCC is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//
//You should have received a copy of the GNU General Public License
//along with DTHAS; If not, see <http://www.gnu.org/licenses/>.  
//===========================================================================

#include	"dcc_global.h"
#include	"dcc_type.h"
#include	<stdio.h>
#include	"dcc_prototype.h"
#include	"dcc_main.h"
#include	"dcc_lex_char.h"
#include	"dcc_lex_word.h"
#include	"dcc_parse.h"

//===========================================================================
// in queue
//===========================================================================
PUBLIC	void	i_queue(s32 token_t)
{
	if(p_queue->count < SIZE_OF_TEMP_DATA)
	{
		*(p_queue->tail)	= token_t;
		p_queue->count++;
		p_queue->tail++;
	}
	else
	{
		printf("queue is full(queue_num:%d)!\n", p_queue->count);
		exit(1);
	}	
}

//===========================================================================
// out queue
//===========================================================================
PUBLIC	s32	o_queue()
{
	s32 ret;
	if(p_queue->count > 0)
	{
		ret	= *(p_queue->head);
		p_queue->count--;
		p_queue->head++;

		if(p_queue->count == 0)
		{
			p_queue->head	= p_queue->tail	= p_queue->queue;
		}

		return	ret;
	}
	else
	{
		printf("queue is empty(queue_num:%d)!\n", p_queue->count);
		exit(1);
	}	
}









